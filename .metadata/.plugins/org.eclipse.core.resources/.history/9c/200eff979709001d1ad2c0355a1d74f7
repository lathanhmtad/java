class MyLinkedList {
	
	public class Node {
		int value;
		Node next;
		Node(int value) {
			this.value = value;
		}
	}
	
	Node head = null;
	int size = 0;
	
    public MyLinkedList() {
    	
    }
    
    public int get(int index) {
    	int i = 0;
    	Node temp = head;
    	while(temp.next != null) {
    		temp = temp.next;
    		i++;
    		if(index == i) {
    			return temp.value;
    		}
    	}
    	return -1;
    }
    
    public void addAtHead(int val) {
    	size++;
    	Node newNode = new Node(val);
    	if(head == null) {
    		head = newNode;
    		return;
    	}
    	newNode.next = head;
    	head = newNode;
    }
    
    public void addAtTail(int val) {
    	size++;
    	Node newNode = new Node(val);
    	if(head == null) {
    		head = newNode;
    		return;
    	}
    	Node i = head;	 
		while(i.next != null) {
			i = i.next;
		}    	       
		i.next = newNode;
    }
    
    public void addAtIndex(int index, int val) {
        if(index > size)
        	return;
        Node newNode = new Node(val);
        if(index == size) {
        	this.addAtTail(val);
        }
        else {
        	int i = 0;
        	Node temp = head;
        	Node prev = null;
        	while(temp.next != null) {
        		prev = temp;
        		temp = temp.next;
        		i++;
        		if(index == i) {
        			prev.next = newNode;
        			newNode.next = temp;
        		}
        	}
        	
        }
    }
    
    public void deleteAtIndex(int index) {
    	int i = 0;
    	Node temp = head;
    	Node prev = null;
    	while(temp.next != null) {
    		prev = temp;
    		temp = temp.next;
    		i++;
    		if(index == i) {
    			
    		}
    	}
    }
    
    public void printLinkedList() {
    	Node i = head;
    	while(i != null) {
    		System.out.print(i.value);
    		i = i.next;
    		if(i != null) {
    			System.out.print("->");
    		}
    		else {
    			System.out.print(" ");
    		}
    	}
    }
}